//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotComp rotComp { get { return (RotComp)GetComponent(GameComponentsLookup.RotComp); } }
    public bool hasRotComp { get { return HasComponent(GameComponentsLookup.RotComp); } }

    public void AddRotComp(float newAngle) {
        var index = GameComponentsLookup.RotComp;
        var component = (RotComp)CreateComponent(index, typeof(RotComp));
        component.Angle = newAngle;
        AddComponent(index, component);
    }

    public void ReplaceRotComp(float newAngle) {
        var index = GameComponentsLookup.RotComp;
        var component = (RotComp)CreateComponent(index, typeof(RotComp));
        component.Angle = newAngle;
        ReplaceComponent(index, component);
    }

    public void RemoveRotComp() {
        RemoveComponent(GameComponentsLookup.RotComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotComp;

    public static Entitas.IMatcher<GameEntity> RotComp {
        get {
            if (_matcherRotComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RotComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotComp = matcher;
            }

            return _matcherRotComp;
        }
    }
}
